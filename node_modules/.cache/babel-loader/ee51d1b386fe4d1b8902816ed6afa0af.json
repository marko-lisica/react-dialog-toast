{"ast":null,"code":"var _jsxFileName = \"/Users/markolisica/Documents/project_react-components/native-html-components/src/components/modal/Modal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport \"./modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = _ref => {\n  _s();\n  let {\n    open,\n    children,\n    onClose\n  } = _ref;\n  const ref = useRef(null);\n\n  // Function that showModal() or add closing className based on \"open\" prop\n  useEffect(() => {\n    const {\n      current: dialog\n    } = ref;\n    if (!open) {\n      dialog === null || dialog === void 0 ? void 0 : dialog.classList.add(\"dialog--closing\");\n    } else {\n      dialog === null || dialog === void 0 ? void 0 : dialog.showModal();\n      dialog === null || dialog === void 0 ? void 0 : dialog.classList.remove(\"dialog--closing\");\n    }\n  }, [open, onClose]);\n\n  // Function that trigger modal close() once closing animation finishes and removes closing className\n  const onAnimationEnd = useCallback(() => {\n    const {\n      current: dialog\n    } = ref;\n    if (!open) dialog === null || dialog === void 0 ? void 0 : dialog.close();\n  }, [open]);\n  const onCancel = useCallback(e => {\n    e.preventDefault();\n    onClose();\n  }, [onClose]);\n  return /*#__PURE__*/_jsxDEV(\"dialog\", {\n    className: \"dialog--modal\",\n    ref: ref,\n    onCancel: onCancel,\n    onClose: onClose,\n    onAnimationEnd: onAnimationEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Modal, \"qSmZA39kHFIeuTdomUM9VibjQRc=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useRef","useEffect","useCallback","Modal","open","children","onClose","ref","current","dialog","classList","add","showModal","remove","onAnimationEnd","close","onCancel","e","preventDefault"],"sources":["/Users/markolisica/Documents/project_react-components/native-html-components/src/components/modal/Modal.tsx"],"sourcesContent":["import React, { useRef, useEffect, FC, useCallback } from \"react\";\nimport \"./modal.css\";\n\ninterface ModalProps {\n    open: boolean;\n    onClose: () => void;\n    children: React.ReactNode;\n}\n\nconst Modal: FC<ModalProps> = ({ open, children, onClose }) => {\n\n    const ref = useRef<HTMLDialogElement>(null);\n\n    // Function that showModal() or add closing className based on \"open\" prop\n    useEffect(() => {\n        const { current: dialog } = ref;\n        if (!open) {\n            dialog?.classList.add(\"dialog--closing\");\n        } else {\n                dialog?.showModal();\n                dialog?.classList.remove(\"dialog--closing\");\n        }\n    }, [open, onClose]);\n\n    // Function that trigger modal close() once closing animation finishes and removes closing className\n    const onAnimationEnd = useCallback(() => {\n        const { current: dialog } = ref;\n        if (!open) dialog?.close();\n    }, [open])\n\n    const onCancel = useCallback(\n        (e: any) => {\n          e.preventDefault();\n          onClose();\n        },\n        [onClose]\n      );\n\n    return(\n        <dialog className=\"dialog--modal\" ref={ref} onCancel={onCancel} onClose={onClose} onAnimationEnd={onAnimationEnd}>\n            <div>\n                {children}\n            </div>\n        </dialog>\n    )\n}\n\nexport default Modal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAMC,WAAW,QAAQ,OAAO;AACjE,OAAO,aAAa;AAAC;AAQrB,MAAMC,KAAqB,GAAG,QAAiC;EAAA;EAAA,IAAhC;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAQ,CAAC;EAEtD,MAAMC,GAAG,GAAGP,MAAM,CAAoB,IAAI,CAAC;;EAE3C;EACAC,SAAS,CAAC,MAAM;IACZ,MAAM;MAAEO,OAAO,EAAEC;IAAO,CAAC,GAAGF,GAAG;IAC/B,IAAI,CAACH,IAAI,EAAE;MACPK,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC5C,CAAC,MAAM;MACCF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,SAAS,EAAE;MACnBH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,SAAS,CAACG,MAAM,CAAC,iBAAiB,CAAC;IACnD;EACJ,CAAC,EAAE,CAACT,IAAI,EAAEE,OAAO,CAAC,CAAC;;EAEnB;EACA,MAAMQ,cAAc,GAAGZ,WAAW,CAAC,MAAM;IACrC,MAAM;MAAEM,OAAO,EAAEC;IAAO,CAAC,GAAGF,GAAG;IAC/B,IAAI,CAACH,IAAI,EAAEK,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,KAAK,EAAE;EAC9B,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEV,MAAMY,QAAQ,GAAGd,WAAW,CACvBe,CAAM,IAAK;IACVA,CAAC,CAACC,cAAc,EAAE;IAClBZ,OAAO,EAAE;EACX,CAAC,EACD,CAACA,OAAO,CAAC,CACV;EAEH,oBACI;IAAQ,SAAS,EAAC,eAAe;IAAC,GAAG,EAAEC,GAAI;IAAC,QAAQ,EAAES,QAAS;IAAC,OAAO,EAAEV,OAAQ;IAAC,cAAc,EAAEQ,cAAe;IAAA,uBAC7G;MAAA,UACKT;IAAQ;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QACD;AAEjB,CAAC;AAAA,GApCKF,KAAqB;AAAA,KAArBA,KAAqB;AAsC3B,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}